<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tsxy.bsjz.platform.dao.mapper.DoctorMapper">
  <resultMap id="BaseResultMap" type="tsxy.bsjz.platform.model.Doctor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="qualificationNum" jdbcType="VARCHAR" property="qualificationNum" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentId" />
    <result column="qualificationId" jdbcType="INTEGER" property="qualificationId" />
    <result column="majorId" jdbcType="INTEGER" property="majorId" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="goodAt" jdbcType="VARCHAR" property="goodAt" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <association property="department" column="departmentId" select="tsxy.bsjz.platform.dao.mapper.DepartmentMapper.selectByPrimaryKey"/>
    <association property="qualification" column="qualificationId" select="tsxy.bsjz.platform.dao.mapper.QualificationMapper.selectByPrimaryKey"/>
    <association property="doctorMajor" column="majorId" select="tsxy.bsjz.platform.dao.mapper.DoctorMajorMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, phone, email, sex, birthday, qualificationNum, departmentId, qualificationId, 
    majorId, college, education, goodAt, createDate
  </sql>
  <select id="selectByExample" parameterType="tsxy.bsjz.platform.model.DoctorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_doctor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_doctor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tsxy.bsjz.platform.model.DoctorExample">
    delete from t_doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tsxy.bsjz.platform.model.Doctor">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_doctor (name, phone, email, 
      sex, birthday, qualificationNum, 
      departmentId, qualificationId, majorId, 
      college, education, goodAt, 
      createDate)
    values (#{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=TIMESTAMP}, #{qualificationNum,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{qualificationId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER}, 
      #{college,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{goodAt,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="tsxy.bsjz.platform.model.Doctor">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="qualificationNum != null">
        qualificationNum,
      </if>
      <if test="departmentId != null">
        departmentId,
      </if>
      <if test="qualificationId != null">
        qualificationId,
      </if>
      <if test="majorId != null">
        majorId,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="goodAt != null">
        goodAt,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="qualificationNum != null">
        #{qualificationNum,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="qualificationId != null">
        #{qualificationId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=INTEGER},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="goodAt != null">
        #{goodAt,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tsxy.bsjz.platform.model.DoctorExample" resultType="java.lang.Long">
    select count(*) from t_doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_doctor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qualificationNum != null">
        qualificationNum = #{record.qualificationNum,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        departmentId = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.qualificationId != null">
        qualificationId = #{record.qualificationId,jdbcType=INTEGER},
      </if>
      <if test="record.majorId != null">
        majorId = #{record.majorId,jdbcType=INTEGER},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.goodAt != null">
        goodAt = #{record.goodAt,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_doctor
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      qualificationNum = #{record.qualificationNum,jdbcType=VARCHAR},
      departmentId = #{record.departmentId,jdbcType=INTEGER},
      qualificationId = #{record.qualificationId,jdbcType=INTEGER},
      majorId = #{record.majorId,jdbcType=INTEGER},
      college = #{record.college,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      goodAt = #{record.goodAt,jdbcType=VARCHAR},
      createDate = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tsxy.bsjz.platform.model.Doctor">
    update t_doctor
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="qualificationNum != null">
        qualificationNum = #{qualificationNum,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        departmentId = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="qualificationId != null">
        qualificationId = #{qualificationId,jdbcType=INTEGER},
      </if>
      <if test="majorId != null">
        majorId = #{majorId,jdbcType=INTEGER},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="goodAt != null">
        goodAt = #{goodAt,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tsxy.bsjz.platform.model.Doctor">
    update t_doctor
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      qualificationNum = #{qualificationNum,jdbcType=VARCHAR},
      departmentId = #{departmentId,jdbcType=INTEGER},
      qualificationId = #{qualificationId,jdbcType=INTEGER},
      majorId = #{majorId,jdbcType=INTEGER},
      college = #{college,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      goodAt = #{goodAt,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectDoctorByDepartmentId" parameterType="java.lang.Integer" resultType="tsxy.bsjz.platform.model.Doctor">
    SELECT <include refid="Base_Column_List" /> FROM t_doctor WHERE departmentId = #{departmentId}
  </select>
  <select id="selectDoctorCountDto" resultType="tsxy.bsjz.platform.dao.vo.DoctorCountDto">
    SELECT name,num FROM v_doctor_count
  </select>
  <update id="updateDepartmentNull" parameterType="java.util.List">
    UPDATE t_doctor SET departmentId = NULL WHERE departmentId IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <update id="updateQualificationNull" parameterType="java.util.List">
    UPDATE t_doctor SET qualificationId = NULL WHERE qualificationId IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <update id="updateMajorNull" parameterType="java.util.List">
    UPDATE t_doctor SET majorId = NULL WHERE majorId IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
</mapper>