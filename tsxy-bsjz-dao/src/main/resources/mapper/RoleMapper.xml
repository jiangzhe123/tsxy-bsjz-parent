<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tsxy.bsjz.platform.dao.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="tsxy.bsjz.platform.model.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roleName" jdbcType="VARCHAR" property="roleName" />
    <result column="roleCode" jdbcType="VARCHAR" property="roleCode" />
    <collection property="powerList" ofType="tsxy.bsjz.platform.model.Power" column="id" select="tsxy.bsjz.platform.dao.mapper.PowerMapper.selectPowerListByRoleId"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, roleName, roleCode
  </sql>
  <select id="selectByExample" parameterType="tsxy.bsjz.platform.model.RoleExample" resultType="tsxy.bsjz.platform.model.Role">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tsxy.bsjz.platform.model.RoleExample">
    delete from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tsxy.bsjz.platform.model.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role (roleName, roleCode)
    values (#{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tsxy.bsjz.platform.model.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        roleName,
      </if>
      <if test="roleCode != null">
        roleCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tsxy.bsjz.platform.model.RoleExample" resultType="java.lang.Long">
    select count(*) from t_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        roleName = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleCode != null">
        roleCode = #{record.roleCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_role
    set id = #{record.id,jdbcType=INTEGER},
      roleName = #{record.roleName,jdbcType=VARCHAR},
      roleCode = #{record.roleCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tsxy.bsjz.platform.model.Role">
    update t_role
    <set>
      <if test="roleName != null">
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        roleCode = #{roleCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tsxy.bsjz.platform.model.Role">
    update t_role
    set roleName = #{roleName,jdbcType=VARCHAR},
      roleCode = #{roleCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRoleByManagerId" parameterType="integer" resultMap="BaseResultMap">
    SELECT r.id,r.roleName,r.roleCode FROM t_role AS r LEFT JOIN t_manager_role AS mr ON r.id = mr.roleId WHERE mr.managerId = #{id}
  </select>
  <select id="selectPowerIdsByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT powerId FROM t_role_power WHERE roleId = #{roleId}
  </select>
  <delete id="deletePowerIdsByRoleId" parameterType="java.lang.Integer">
    DELETE FROM t_role_power WHERE roleId = #{roleId}
  </delete>
  <insert id="insertIntoRoleAndPower">
    INSERT INTO t_role_power(roleId,powerId) VALUES
    <foreach collection="powerIds" item="powerId" separator=",">
      (#{roleId},#{powerId})
    </foreach>
  </insert>
  <select id="selectManagerIdWhenDelete" parameterType="java.util.List" resultType="java.lang.Integer">
    SELECT managerId FROM t_manager_role WHERE roleId IN
    <foreach item="item" collection="list" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
</mapper>