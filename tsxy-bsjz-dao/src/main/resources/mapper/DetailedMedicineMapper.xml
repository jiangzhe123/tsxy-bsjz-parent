<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tsxy.bsjz.platform.dao.mapper.DetailedMedicineMapper">
  <resultMap id="BaseResultMap" type="tsxy.bsjz.platform.model.DetailedMedicine">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="detailedId" jdbcType="INTEGER" property="detailedId" />
    <result column="medicineId" jdbcType="INTEGER" property="medicineId" />
    <result column="medicineNum" jdbcType="INTEGER" property="medicineNum" />
    <result column="medicinePrice" jdbcType="DECIMAL" property="medicinePrice" />
    <association property="medicine" column="medicineId" select="tsxy.bsjz.platform.dao.mapper.MedicineMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, detailedId, medicineId, medicineNum, medicinePrice
  </sql>
  <select id="selectByExample" parameterType="tsxy.bsjz.platform.model.DetailedMedicineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_detailed_medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_detailed_medicine
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_detailed_medicine
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tsxy.bsjz.platform.model.DetailedMedicineExample">
    delete from t_detailed_medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tsxy.bsjz.platform.model.DetailedMedicine">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_detailed_medicine (detailedId, medicineId, medicineNum, 
      medicinePrice)
    values (#{detailedId,jdbcType=INTEGER}, #{medicineId,jdbcType=INTEGER}, #{medicineNum,jdbcType=INTEGER}, 
      #{medicinePrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="tsxy.bsjz.platform.model.DetailedMedicine">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_detailed_medicine
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="detailedId != null">
        detailedId,
      </if>
      <if test="medicineId != null">
        medicineId,
      </if>
      <if test="medicineNum != null">
        medicineNum,
      </if>
      <if test="medicinePrice != null">
        medicinePrice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="detailedId != null">
        #{detailedId,jdbcType=INTEGER},
      </if>
      <if test="medicineId != null">
        #{medicineId,jdbcType=INTEGER},
      </if>
      <if test="medicineNum != null">
        #{medicineNum,jdbcType=INTEGER},
      </if>
      <if test="medicinePrice != null">
        #{medicinePrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tsxy.bsjz.platform.model.DetailedMedicineExample" resultType="java.lang.Long">
    select count(*) from t_detailed_medicine
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_detailed_medicine
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.detailedId != null">
        detailedId = #{record.detailedId,jdbcType=INTEGER},
      </if>
      <if test="record.medicineId != null">
        medicineId = #{record.medicineId,jdbcType=INTEGER},
      </if>
      <if test="record.medicineNum != null">
        medicineNum = #{record.medicineNum,jdbcType=INTEGER},
      </if>
      <if test="record.medicinePrice != null">
        medicinePrice = #{record.medicinePrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_detailed_medicine
    set id = #{record.id,jdbcType=INTEGER},
      detailedId = #{record.detailedId,jdbcType=INTEGER},
      medicineId = #{record.medicineId,jdbcType=INTEGER},
      medicineNum = #{record.medicineNum,jdbcType=INTEGER},
      medicinePrice = #{record.medicinePrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tsxy.bsjz.platform.model.DetailedMedicine">
    update t_detailed_medicine
    <set>
      <if test="detailedId != null">
        detailedId = #{detailedId,jdbcType=INTEGER},
      </if>
      <if test="medicineId != null">
        medicineId = #{medicineId,jdbcType=INTEGER},
      </if>
      <if test="medicineNum != null">
        medicineNum = #{medicineNum,jdbcType=INTEGER},
      </if>
      <if test="medicinePrice != null">
        medicinePrice = #{medicinePrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tsxy.bsjz.platform.model.DetailedMedicine">
    update t_detailed_medicine
    set detailedId = #{detailedId,jdbcType=INTEGER},
      medicineId = #{medicineId,jdbcType=INTEGER},
      medicineNum = #{medicineNum,jdbcType=INTEGER},
      medicinePrice = #{medicinePrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectMedicineByDetailedId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" /> FROM t_detailed_medicine WHERE detailedId = #{detailedId}
  </select>
  <update id="updateMedicineNull" parameterType="java.util.List">
    UPDATE t_detailed_medicine SET medicineId = NULL WHERE medicineId IN
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
</mapper>