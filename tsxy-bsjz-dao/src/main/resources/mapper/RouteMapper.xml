<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tsxy.bsjz.platform.dao.mapper.RouteMapper">
  <resultMap id="BaseResultMap" type="tsxy.bsjz.platform.model.Route">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="parentId" jdbcType="INTEGER" property="parentId" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="iconClass" jdbcType="VARCHAR" property="iconClass" />
    <result column="roleNumber" jdbcType="INTEGER" property="roleNumber" />
    <association property="parentRoute" column="parentId" select="selectParentRouteById"/>
    <collection property="childRoutes" ofType="tsxy.bsjz.platform.model.Route" column="id" select="selectChildRoutesById"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, title, path, parentId, component, code, iconClass, roleNumber
  </sql>
  <select id="selectByExample" parameterType="tsxy.bsjz.platform.model.RouteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_route
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_route
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_route
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tsxy.bsjz.platform.model.RouteExample">
    delete from t_route
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tsxy.bsjz.platform.model.Route">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_route (name, title, path, 
      parentId, component, code, 
      iconClass, roleNumber)
    values (#{name,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER}, #{component,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{iconClass,jdbcType=VARCHAR}, #{roleNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="tsxy.bsjz.platform.model.Route">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_route
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="iconClass != null">
        iconClass,
      </if>
      <if test="roleNumber != null">
        roleNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="iconClass != null">
        #{iconClass,jdbcType=VARCHAR},
      </if>
      <if test="roleNumber != null">
        #{roleNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tsxy.bsjz.platform.model.RouteExample" resultType="java.lang.Long">
    select count(*) from t_route
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_route
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parentId = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.component != null">
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.iconClass != null">
        iconClass = #{record.iconClass,jdbcType=VARCHAR},
      </if>
      <if test="record.roleNumber != null">
        roleNumber = #{record.roleNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_route
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      parentId = #{record.parentId,jdbcType=INTEGER},
      component = #{record.component,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      iconClass = #{record.iconClass,jdbcType=VARCHAR},
      roleNumber = #{record.roleNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tsxy.bsjz.platform.model.Route">
    update t_route
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="iconClass != null">
        iconClass = #{iconClass,jdbcType=VARCHAR},
      </if>
      <if test="roleNumber != null">
        roleNumber = #{roleNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tsxy.bsjz.platform.model.Route">
    update t_route
    set name = #{name,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=INTEGER},
      component = #{component,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      iconClass = #{iconClass,jdbcType=VARCHAR},
      roleNumber = #{roleNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRouteByPowerId" parameterType="integer" resultType="tsxy.bsjz.platform.model.Route">
    SELECT r.id,r.`name`,r.title,r.path,r.parentId,r.component,r.`code`,r.iconClass,r.roleNumber FROM t_route AS r LEFT JOIN t_power_route AS pr ON r.id = pr.routeId WHERE pr.powerId =#{id}
  </select>
  <select id="selectChildRoutesById" parameterType="integer" resultType="tsxy.bsjz.platform.model.Route">
    SELECT <include refid="Base_Column_List" /> FROM t_route WHERE parentId = #{id}
  </select>
  <select id="selectParentRouteById" parameterType="integer" resultType="tsxy.bsjz.platform.model.Route">
    SELECT <include refid="Base_Column_List" /> FROM t_route WHERE id = #{parentId}
  </select>
  <select id="selectPowerIdWhenDelete" parameterType="java.util.List" resultType="java.lang.Integer">
    SELECT powerId FROM t_power_route WHERE routeId IN
    <foreach item="item" collection="list" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
</mapper>