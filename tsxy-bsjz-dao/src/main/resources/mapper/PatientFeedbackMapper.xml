<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tsxy.bsjz.platform.dao.mapper.PatientFeedbackMapper">
  <resultMap id="BaseResultMap" type="tsxy.bsjz.platform.model.PatientFeedback">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="patientId" jdbcType="INTEGER" property="patientId" />
    <result column="feedbackContent" jdbcType="VARCHAR" property="feedbackContent" />
    <result column="feedbackDate" jdbcType="TIMESTAMP" property="feedbackDate" />
    <association property="patient" column="patientId" select="tsxy.bsjz.platform.dao.mapper.PatientMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, patientId, feedbackContent, feedbackDate
  </sql>
  <select id="selectByExample" parameterType="tsxy.bsjz.platform.model.PatientFeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_patient_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_patient_feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_patient_feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="tsxy.bsjz.platform.model.PatientFeedbackExample">
    delete from t_patient_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tsxy.bsjz.platform.model.PatientFeedback">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_patient_feedback (patientId, feedbackContent, feedbackDate
      )
    values (#{patientId,jdbcType=INTEGER}, #{feedbackContent,jdbcType=VARCHAR}, #{feedbackDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="tsxy.bsjz.platform.model.PatientFeedback">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_patient_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        patientId,
      </if>
      <if test="feedbackContent != null">
        feedbackContent,
      </if>
      <if test="feedbackDate != null">
        feedbackDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        #{patientId,jdbcType=INTEGER},
      </if>
      <if test="feedbackContent != null">
        #{feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDate != null">
        #{feedbackDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tsxy.bsjz.platform.model.PatientFeedbackExample" resultType="java.lang.Long">
    select count(*) from t_patient_feedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_patient_feedback
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.patientId != null">
        patientId = #{record.patientId,jdbcType=INTEGER},
      </if>
      <if test="record.feedbackContent != null">
        feedbackContent = #{record.feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackDate != null">
        feedbackDate = #{record.feedbackDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_patient_feedback
    set id = #{record.id,jdbcType=INTEGER},
      patientId = #{record.patientId,jdbcType=INTEGER},
      feedbackContent = #{record.feedbackContent,jdbcType=VARCHAR},
      feedbackDate = #{record.feedbackDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="tsxy.bsjz.platform.model.PatientFeedback">
    update t_patient_feedback
    <set>
      <if test="patientId != null">
        patientId = #{patientId,jdbcType=INTEGER},
      </if>
      <if test="feedbackContent != null">
        feedbackContent = #{feedbackContent,jdbcType=VARCHAR},
      </if>
      <if test="feedbackDate != null">
        feedbackDate = #{feedbackDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="tsxy.bsjz.platform.model.PatientFeedback">
    update t_patient_feedback
    set patientId = #{patientId,jdbcType=INTEGER},
      feedbackContent = #{feedbackContent,jdbcType=VARCHAR},
      feedbackDate = #{feedbackDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updatePatient2Null" parameterType="java.util.List">
    UPDATE t_patient_feedback SET patientId = NULL WHERE patientId IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
</mapper>